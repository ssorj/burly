# XXX For the which problem
CYGWIN = call("uname").startswith("CYGWIN")

@command
def test(shell="sh", verbose=False, debug=False):
    if not CYGWIN:
        check_program(shell)

    burly_sh = read("burly.sh")
    install_sh_in = read("install.sh.in")
    install_sh = replace(install_sh_in, "@burly@", burly_sh)

    write("build/install.sh", install_sh)

    if debug:
        ENV["DEBUG"] = "1"

    try:
        run(f"{shell} build/install.sh".strip())
    finally:
        if debug:
            del ENV["DEBUG"]

@command
def big_test(verbose=False, debug=False):
    """
    Run the tests on a range of different shells
    """

    test(verbose=verbose, debug=True)
    test(verbose=verbose, debug=False)

    for shell in "ash", "bash", "dash", "ksh", "mksh", "yash", "zsh":
        if CYGWIN or not which(shell):
            continue

        test(app, shell=shell, verbose=verbose, debug=debug)

@command
def lint():
    """
    Use shellcheck to scan for problems
    """

    check_program("shellcheck")

    run("shellcheck --shell sh --enable all --exclude SC3043 burly.sh")

@command
def clean():
    remove("build")
